var y=()=>{let t=new Map;return{listen:(n,e)=>(t.has(n)||t.set(n,new Set),t.get(n).add(e),()=>{t.has(n)&&t.get(n).delete(e)}),publish:async(n,e)=>{if(console.log(t),t.has(n)){let r=t.get(n);for(let o of r.values())await o(e)}else throw Error(`Event ${n} doesn't exist`)},clear:n=>{t.delete(n)}}};var d=(t,n,...e)=>{let r=performance.now();for(let o=0;o<n;o++)t(...e);return performance.now()-r};function a(t,n=[]){for(let e=0;e<t.length;e++){let r=t[e];Array.isArray(r)?a(r,n):n.push(r)}return n}function E(t){return a(t)}function i(t){if(t.length<=1)return t;let n=t[t.length-1],e=[],r=[];for(let o of t.slice(0,t.length-1))o<=n?e.push(o):r.push(o);return[...i(e),n,...i(r)]}var v=t=>(n,e)=>{throw console.error(`${t}:${n}: ${e}`),{provider:t,path:n,reason:e,ERROR:1}},g=t=>t.ERROR==1;import*as l from"js-yaml";var w=()=>({validate:(t,n)=>{let e=l.load(t);if(!e||typeof e!="object")throw new Error("Invalid YAML data");for(let r in n)if(Object.prototype.hasOwnProperty.call(n,r)){let o=n[r],s=e[r];if(s===void 0)throw new Error(`Key '${r}' not found in YAML data`);for(let c of o)if(!c(s))throw new Error(`Validation failed for ${r}: ${s}`)}return!0}});var T=t=>({value:t});export{y as EventEmitter,T as Some,v as error,E as flat,g as isError,i as quickSort,d as runTime,w as yamlValidator};
